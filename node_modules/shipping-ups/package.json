{
  "name": "shipping-ups",
  "version": "0.4.17",
  "description": "UPS API bindings for Node.JS",
  "keywords": [
    "shipping",
    "shipping integration",
    "ups",
    "ups api",
    "ups ship",
    "ups label",
    "ups tracking",
    "ups rate",
    "ups rating",
    "address verification",
    "time in transit",
    "surepost",
    "sure post",
    "ups return service",
    "tax ids",
    "transaction references"
  ],
  "author": {
    "name": "uh-sem-blee, Co. | typefoo",
    "email": "hello@typefoo.com"
  },
  "maintainers": [
    {
      "name": "jjosef",
      "email": "john.josef@gmail.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/typefoo/node-shipping-ups"
  },
  "main": "./lib/index.js",
  "directories": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "license": "MIT",
  "dependencies": {
    "extend": "latest",
    "xmlbuilder": "latest",
    "xml2json": "latest"
  },
  "readme": "#shipping-ups\n\n## Install\n\n`npm install shipping-ups`\n\n## Usage\n\n```js\n  var upsAPI = require('shipping-ups');\n\n  var ups = new upsAPI({\n    environment: 'sandbox', // or live\n    username: 'UPSUSERNAME',\n    password: 'UPSPASSWORD',\n    access_key: 'UPSACCESSTOKEN',\n    imperial: true // set to false for metric\n  });\n\n  var realWeight = ups.dimensionalWeight(weight, length, width, height);\n\n  ups.time_in_transit(..., function(err, res) {\n    ...\n  });\n\n  ups.address_validation(..., function(err, result) {\n    ...\n  });\n\n  ups.track(..., function(err, result) {\n    ...\n  });\n\n  ups.rates(..., function(err, result) {\n    ...\n  });\n\n  // Generate a Digest for a specific Rate\n  ups.confirm(..., function(err, result) {\n    ...\n  });\n\n  // Purchase the Label\n  ups.accept(..., function(err, result) {\n    ...\n  });\n\n  // Void the Shipment\n  ups.void(..., function(err, result) {\n    ...\n  });\n```\n\n### new upsAPI(options)\n\nInitialize your API bindings\n\n```js\n  options = {\n    imperial: true, // for inches/lbs, false for metric cm/kgs\n    currency: 'USD',\n    environment: 'sandbox',\n    access_key: '',\n    username: '',\n    password: '',\n    pretty: false,\n    user_agent: 'uh-sem-blee, Co | typefoo',\n    debug: false\n  }\n```\n\n### dimensionalWeight(weight, length, width, height)\n\nReturns the real weight needing to be used for your package.\n\n`weight` The tare weight of your product\n\n`length` The longest side of your package\n\n`width` The width of your package\n\n`height` The height of your package\n\n### Optional Options\n\nAll request below can have the following optional options passed in an object:\n\n`transaction_id` A reference number you can pass to the transaction. Is returned as TransactionReference.CustomerContext\n\n`extra_params` This object extends the request object that is passed to the XML parser. Use with caution, but can enable extended functionality not present in the current module.\n\n### time_in_transit(data, [options,] callback)\n\nCalculate the time in transit for a shipment\n\n```js\n  data = {\n    from: {\n      city: 'Dover',\n      state_code: 'OH',\n      postal_code: '44622',\n      country_code: 'US'\n    },\n    to: {\n      city: 'Charlotte',\n      state_code: 'NC',\n      postal_code: '28205',\n      country_code: 'US'\n    },\n    weight: 10, // set imperial to false for KGS\n    pickup_date: 'YYYYMMDD',\n    total_packages: 1, // number of packages in shipment\n    value: 999999999.99, // Invoice value, set currency in options\n  }\n```\n\n### address_validation(data, [options,] callback)\n\nValidates an address\n\n```js\n  data = {\n    request_option: 3, // 1, 2, or 3 per UPS docs\n    // 1 - Address Validation\n    // 2 - Address Classification\n    // 3 - Address Validation and Address Classification.\n    name: 'Customer Name',\n    company: 'Company Name',\n    address_line_1: 'Address Line 1',\n    address_line_2: 'Address Line 2',\n    address_line_3: 'Address Line 3',\n    city: 'Dover',\n    state_code: 'OH',\n    postal_code: '44622',\n    country_code: 'US'\n  }\n```\n\n### track(tracking_number, [options,] callback)\n\nGet a shipment's tracking information with `tracking_number` as the ID\n\n```js\n  options = {\n    latest: true // default false, will get only the latest tracking info, otherwise retrieves history\n  }\n```\n\n### rates(data, [options,] callback)\n\nGet a list of shipping rates\n\n```js\n  data = {\n    pickup_type: 'daily_pickup', // optional, can be: 'daily_pickup', 'customer_counter', 'one_time_pickup', 'on_call_air', 'suggested_retail_rates', 'letter_center', 'air_service_center'\n    pickup_type_code: '02', // optional, overwrites pickup_type\n    customer_classification: '00', // optional, need more details about what this does\n    shipper: {\n      name: 'Type Foo',\n      shipper_number: 'SHIPPER_NUMBER', // optional, but recommended for accurate rating\n      phone_number: '', // optional\n      tax_identification_number: '', // optional\n      address: {\n        address_line_1: '123 Fake Address',\n        city: 'Dover',\n        state_code: 'OH',\n        country_code: 'US',\n        postal_code: '44622'\n      }\n    },\n    ship_to: {\n      company_name: 'Company Name', // or person's name\n      attention_name: '', // optional\n      phone_number: '', // optional\n      tax_identification_number: '', // optional\n      location_id: '', //optional, for specific locations\n      address: {\n        address_line_1: '3456 Fake Address', // optional\n        city: 'Charlotte', // optional\n        state_code: 'NC', // optional, required for negotiated rates\n        country_code: 'US',\n        postal_code: '28205',\n        residential: true // optional, can be useful for accurate rating\n      }\n    },\n    ship_from: { // optional, use if different from shipper address\n      company_name: 'Company Name', // or person's name\n      attention_name: 'Attention Name',\n      phone_number: '', // optional\n      tax_identification_number: '', // optional\n      address: {\n        address_line_1: '123 Fake Address',\n        city: 'Dover',\n        state_code: 'OH',\n        country_code: 'US',\n        postal_code: '44622'\n      }\n    },\n    sold_to: { // optional, The person or company who imports and pays any duties due on the current shipment, required if Invoice of NAFTA CO is requested\n      option: '01', // optional, applies to NAFTA CO form\n      company_name: 'Company Name', // or person's name\n      attention_name: 'Attention Name',\n      phone_number: '', // optional\n      tax_identification_number: '', // optional\n      address: {\n        address_line_1: '123 Fake Address',\n        city: 'Dover',\n        state_code: 'OH',\n        country_code: 'US',\n        postal_code: '44622'\n      }\n    },\n    service: '03' // optional, will rate this specific service.\n    services: [ // optional, you can specify which rates to look for -- performs multiple requests, so be careful not to do too many\n      '03'\n    ],\n    return_service: '9', // optional, will provide a UPS Return Service specification\n    packages: [\n      {\n        packaging_type: '02', // optional, packaging type code\n        weight: 10,\n        description: 'My Package', // optional\n        delivery_confirmation_type: 2, // optional, 1 or 2\n        insured_value: 1000.00, // optional, 2 decimals\n        dimensions: { // optional, integers: 0-108 for imperial, 0-270 for metric\n          length: 12,\n          width: 12,\n          height: 24\n        }\n      }\n    ]\n  }\n```\n\n### confirm(data, [options,] callback)\n\nPick a shipping rate\n\n```js\n  data = {\n    service_code: '03', // required for selected rate\n    return_service: '9', // optional, will provide a UPS Return Service specification\n    pickup_type: 'daily_pickup', // optional, can be: 'daily_pickup', 'customer_counter', 'one_time_pickup', 'on_call_air', 'suggested_retail_rates', 'letter_center', 'air_service_center'\n    pickup_type_code: '02', // optional, overwrites pickup_type\n    customer_classification: '00', // optional, need more details about what this does\n    shipper: {\n      name: 'Type Foo',\n      shipper_number: 'SHIPPER_NUMBER', // optional, but recommended for accurate rating\n      phone_number: '', // optional\n      tax_identification_number: '', // optional\n      address: {\n        address_line_1: '123 Fake Address',\n        city: 'Dover',\n        state_code: 'OH',\n        country_code: 'US',\n        postal_code: '44622'\n      }\n    },\n    ship_to: {\n      company_name: 'Company Name', // or person's name\n      attention_name: '', // optional\n      phone_number: '', // optional\n      tax_identification_number: '', // optional\n      location_id: '', //optional, for specific locations\n      address: {\n        address_line_1: '3456 Fake Address', // optional\n        city: 'Charlotte', // optional\n        state_code: 'NC', // optional, required for negotiated rates\n        country_code: 'US',\n        postal_code: '28205',\n        residential: true // optional, can be useful for accurate rating\n      }\n    },\n    ship_from: { // optional, use if different from shipper address\n      company_name: 'Company Name', // or person's name\n      attention_name: 'Attention Name',\n      phone_number: '', // optional\n      tax_identification_number: '', // optional\n      address: {\n        address_line_1: '123 Fake Address',\n        city: 'Dover',\n        state_code: 'OH',\n        country_code: 'US',\n        postal_code: '44622'\n      }\n    },\n    sold_to: { // optional, The person or company who imports and pays any duties due on the current shipment, required if Invoice of NAFTA CO is requested\n      option: '01', // optional, applies to NAFTA CO form\n      company_name: 'Company Name', // or person's name\n      attention_name: 'Attention Name',\n      phone_number: '', // optional\n      tax_identification_number: '', // optional\n      address: {\n        address_line_1: '123 Fake Address',\n        city: 'Dover',\n        state_code: 'OH',\n        country_code: 'US',\n        postal_code: '44622'\n      }\n    },\n    packages: [ // at least one package is required\n      {\n        packaging_type: '02', // optional, packaging type code\n        weight: 10,\n        description: 'My Package', // optional\n        delivery_confirmation_type: 2, // optional, 1 or 2\n        insured_value: 1000.00, // optional, 2 decimals\n        dimensions: { // optional, integers: 0-108 for imperial, 0-270 for metric\n          length: 12,\n          width: 12,\n          height: 24\n        },\n        reference_number: 'ABC123' // optional\n        reference_number: { // optional, object format code/value keypair\n          code: 'PM',\n          value: 'ABC123'\n        },\n        reference_number: [ // optional, array format, can be strings or objects in code/value keypair format\n          'ABC123',\n          'WWWABC123'\n        ]\n      }\n    ]\n  }\n```\n\n### accept(shipment_digest, [options,] callback)\n\nPurchase a shipping label and tracking number\n\n```js\n  shipment_digest = 'SHIPMENTDIGEST'; // big data string\n```\n\n### void(data, [options,] callback)\n\n```js\n  data = '1ZTRACKINGNUMBER';\n```\n\nOR\n\n```js\n  data = {\n    shipment_identification_number: '1ZSHIPMENTIDNUMBER',\n    tracking_numbers: ['1ZTRACKINGNUMBER', '1ZTRACKINGNUMBER'] // optional\n  }\n```\n\nVoid a previously created order\n\nSee `example/index.js` for a working sample.\n\n## License\n\n(The MIT License)\n\nCopyright 2014 uh-sem-blee, Co. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/typefoo/node-shipping-ups/issues"
  },
  "_id": "shipping-ups@0.4.17",
  "dist": {
    "shasum": "ecf767df6fcd074a9d9b2719036e5e0c3c604129"
  },
  "_from": "shipping-ups@",
  "_resolved": "https://registry.npmjs.org/shipping-ups/-/shipping-ups-0.4.17.tgz"
}
